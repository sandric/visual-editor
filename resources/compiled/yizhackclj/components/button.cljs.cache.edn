;; Analyzed by ClojureScript 1.8.40
{:use-macros {sel1 dommy.core, sel dommy.core}, :excludes #{}, :name yizhackclj.components.button, :imports nil, :requires {yizhackclj.utils yizhackclj.utils, p posh.core, reagent.core reagent.core, r reagent.core, dommy dommy.core, yizhackclj.db.keyboard yizhackclj.db.keyboard, db yizhackclj.db.keyboard, state yizhackclj.state, posh.core posh.core, dommy.core dommy.core, yizhackclj.state yizhackclj.state, utils yizhackclj.utils}, :uses {conn yizhackclj.db.keyboard}, :defs {button-value-input {:protocol-inline nil, :meta {:file "/Users/sandric/projects/clojure/yizhack/src/yizhackclj/components/button.cljs", :line 16, :column 7, :end-line 16, :end-column 25, :arglists (quote ([button-id value]))}, :name yizhackclj.components.button/button-value-input, :variadic false, :file "/Users/sandric/projects/clojure/yizhack/src/yizhackclj/components/button.cljs", :end-column 25, :method-params ([button-id value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([button-id value]))}, button-functor-select {:protocol-inline nil, :meta {:file "/Users/sandric/projects/clojure/yizhack/src/yizhackclj/components/button.cljs", :line 34, :column 7, :end-line 34, :end-column 28, :arglists (quote ([layer-ids]))}, :name yizhackclj.components.button/button-functor-select, :variadic false, :file "/Users/sandric/projects/clojure/yizhack/src/yizhackclj/components/button.cljs", :end-column 28, :method-params ([layer-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([layer-ids]))}, button-control-select {:protocol-inline nil, :meta {:file "/Users/sandric/projects/clojure/yizhack/src/yizhackclj/components/button.cljs", :line 61, :column 7, :end-line 61, :end-column 28, :arglists (quote ([layer-ids]))}, :name yizhackclj.components.button/button-control-select, :variadic false, :file "/Users/sandric/projects/clojure/yizhack/src/yizhackclj/components/button.cljs", :end-column 28, :method-params ([layer-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([layer-ids]))}, color-for-functor-button {:protocol-inline nil, :meta {:file "/Users/sandric/projects/clojure/yizhack/src/yizhackclj/components/button.cljs", :line 98, :column 7, :end-line 98, :end-column 31, :arglists (quote ([functor]))}, :name yizhackclj.components.button/color-for-functor-button, :variadic false, :file "/Users/sandric/projects/clojure/yizhack/src/yizhackclj/components/button.cljs", :end-column 31, :method-params ([functor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 1, :fn-var true, :arglists (quote ([functor]))}, get-button-color {:protocol-inline nil, :meta {:file "/Users/sandric/projects/clojure/yizhack/src/yizhackclj/components/button.cljs", :line 107, :column 7, :end-line 107, :end-column 23, :arglists (quote ([value selected hovered]))}, :name yizhackclj.components.button/get-button-color, :variadic false, :file "/Users/sandric/projects/clojure/yizhack/src/yizhackclj/components/button.cljs", :end-column 23, :method-params ([value selected hovered]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 3, :fn-var true, :arglists (quote ([value selected hovered]))}, button-view {:protocol-inline nil, :meta {:file "/Users/sandric/projects/clojure/yizhack/src/yizhackclj/components/button.cljs", :line 122, :column 7, :end-line 122, :end-column 18, :arglists (quote ([button-id]))}, :name yizhackclj.components.button/button-view, :variadic false, :file "/Users/sandric/projects/clojure/yizhack/src/yizhackclj/components/button.cljs", :end-column 18, :method-params ([button-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 1, :fn-var true, :arglists (quote ([button-id]))}, button-thumb-view {:protocol-inline nil, :meta {:file "/Users/sandric/projects/clojure/yizhack/src/yizhackclj/components/button.cljs", :line 160, :column 7, :end-line 160, :end-column 24, :arglists (quote ([button-id]))}, :name yizhackclj.components.button/button-thumb-view, :variadic false, :file "/Users/sandric/projects/clojure/yizhack/src/yizhackclj/components/button.cljs", :end-column 24, :method-params ([button-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 1, :fn-var true, :arglists (quote ([button-id]))}}, :require-macros {r reagent.core, reagent.core reagent.core, dommy dommy.core, dommy.core dommy.core}, :cljs.analyzer/constants {:seen #{:layer/name :div.button :pre :else :top :on-mouse-out :div.button.thumb * :button/row :value :background-color :type :on-click :style :option :opacity :layer/color :maxLength :select#control_select :layer/vid :on-mouse-over :db/add :input :select#layers_select :on-change :button/column :button/value :left}, :order [:input :type :maxLength :value :on-change :db/add :button/value :select#layers_select :option * :layer/vid :layer/name :select#control_select :layer/color :else :button/row :button/column :div.button :style :on-click :on-mouse-over :on-mouse-out :background-color :opacity :left :top :pre :div.button.thumb]}, :doc nil}