;; Analyzed by ClojureScript 1.8.40
{:use-macros {sel1 dommy.core, sel dommy.core}, :excludes #{}, :name yizhackclj.components.layer, :imports nil, :requires {button-components yizhackclj.components.button, yizhackclj.utils yizhackclj.utils, p posh.core, reagent.core reagent.core, r reagent.core, dommy dommy.core, yizhackclj.db.keyboard yizhackclj.db.keyboard, db yizhackclj.db.keyboard, state yizhackclj.state, posh.core posh.core, dommy.core dommy.core, yizhackclj.state yizhackclj.state, utils yizhackclj.utils, yizhackclj.components.button yizhackclj.components.button}, :uses {conn yizhackclj.db.keyboard}, :defs {layer-name-input {:protocol-inline nil, :meta {:file "/Users/sandric/projects/clojure/yizhack/src/yizhackclj/components/layer.cljs", :line 19, :column 7, :end-line 19, :end-column 23, :arglists (quote ([layer-id name]))}, :name yizhackclj.components.layer/layer-name-input, :variadic false, :file "src/yizhackclj/components/layer.cljs", :end-column 23, :method-params ([layer-id name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([layer-id name]))}, layer-color-input {:protocol-inline nil, :meta {:file "/Users/sandric/projects/clojure/yizhack/src/yizhackclj/components/layer.cljs", :line 34, :column 7, :end-line 34, :end-column 24, :arglists (quote ([layer-id color]))}, :name yizhackclj.components.layer/layer-color-input, :variadic false, :file "src/yizhackclj/components/layer.cljs", :end-column 24, :method-params ([layer-id color]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([layer-id color]))}, layer-view {:protocol-inline nil, :meta {:file "/Users/sandric/projects/clojure/yizhack/src/yizhackclj/components/layer.cljs", :line 51, :column 7, :end-line 51, :end-column 17, :arglists (quote ([layer-vid]))}, :name yizhackclj.components.layer/layer-view, :variadic false, :file "src/yizhackclj/components/layer.cljs", :end-column 17, :method-params ([layer-vid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([layer-vid]))}, layer-thumb-view {:protocol-inline nil, :meta {:file "/Users/sandric/projects/clojure/yizhack/src/yizhackclj/components/layer.cljs", :line 116, :column 7, :end-line 116, :end-column 23, :arglists (quote ([layer-id]))}, :name yizhackclj.components.layer/layer-thumb-view, :variadic false, :file "src/yizhackclj/components/layer.cljs", :end-column 23, :method-params ([layer-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 1, :fn-var true, :arglists (quote ([layer-id]))}}, :require-macros {r reagent.core, reagent.core reagent.core, dommy dommy.core, dommy.core dommy.core}, :cljs.analyzer/constants {:seen #{:layer/name :find :div.layer :where :pre :key :button * :value :div.layout :background-color :div.control :type :on-click :style ?layer-id :layer $ :class :div.layer.thumb :db/id :layer/color :maxLength :layer/vid :db/add :form :input :on-change ... ?button ?id :button/value :in}, :order [:input :type :maxLength :value :on-change :db/add :layer/name :layer/color :db/id :find ?button ... :in $ ?id :where :button/value :layer :div.layer :class :style :background-color :div.control :button :on-click :form :pre :div.layout :key * :layer/vid ?layer-id :div.layer.thumb]}, :doc nil}