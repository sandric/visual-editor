;; Analyzed by ClojureScript 1.8.40
{:use-macros nil, :excludes #{}, :name yizhackclj.components.textual, :imports nil, :requires {r reagent.core, reagent.core reagent.core, db yizhackclj.db, yizhackclj.db yizhackclj.db, state yizhackclj.state, yizhackclj.state yizhackclj.state, button-components yizhackclj.components.button, yizhackclj.components.button yizhackclj.components.button}, :uses nil, :defs {textual {:protocol-inline nil, :meta {:file "/Users/sandric/projects/clojure/yizhack/src/yizhackclj/components/textual.cljs", :line 15, :column 7, :end-line 15, :end-column 14, :arglists (quote ([]))}, :name yizhackclj.components.textual/textual, :variadic false, :file "/Users/sandric/projects/clojure/yizhack/src/yizhackclj/components/textual.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:key :name :value :type :layer-id :div.edit :column :option :id :maxLength :form :input :on-change :row :select}, :order [:div.edit :layer-id :row :column :form :input :type :maxLength :value :on-change :select :option :id :name :key]}, :doc nil}