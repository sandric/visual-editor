;; Analyzed by ClojureScript 1.8.40
{:use-macros nil, :excludes #{}, :name yizhackclj.components.button, :imports nil, :requires {r reagent.core, reagent.core reagent.core, db yizhackclj.db, yizhackclj.db yizhackclj.db, state yizhackclj.state, yizhackclj.state yizhackclj.state}, :uses nil, :defs {get-button-color {:protocol-inline nil, :meta {:file "/Users/sandric/projects/clojure/yizhack/src/yizhackclj/components/button.cljs", :line 12, :column 7, :end-line 12, :end-column 23, :arglists (quote ([value selected hovered]))}, :name yizhackclj.components.button/get-button-color, :variadic false, :file "src/yizhackclj/components/button.cljs", :end-column 23, :method-params ([value selected hovered]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 3, :fn-var true, :arglists (quote ([value selected hovered]))}, thumb {:protocol-inline nil, :meta {:file "/Users/sandric/projects/clojure/yizhack/src/yizhackclj/components/button.cljs", :line 26, :column 7, :end-line 26, :end-column 12, :arglists (quote ([button]))}, :name yizhackclj.components.button/thumb, :variadic false, :file "src/yizhackclj/components/button.cljs", :end-column 12, :method-params ([button]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([button]))}, button {:protocol-inline nil, :meta {:file "/Users/sandric/projects/clojure/yizhack/src/yizhackclj/components/button.cljs", :line 46, :column 7, :end-line 46, :end-column 13, :arglists (quote ([button]))}, :name yizhackclj.components.button/button, :variadic false, :file "src/yizhackclj/components/button.cljs", :end-column 13, :method-params ([button]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([button]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:div.button :color :pre :else :top :on-mouse-out :div.button.thumb :value :background-color :on-click :column :style :opacity :id :on-mouse-over :row :left}, :order [:color :else :row :column :value :div.button.thumb :style :background-color :left :top :id :div.button :on-click :on-mouse-over :on-mouse-out :opacity :pre]}, :doc nil}